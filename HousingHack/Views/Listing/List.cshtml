@using HousingHack.Constants
@model IEnumerable<HousingHack.Models.ListingsModel>

@{
    ViewBag.Title = "Listings Available";
    var grid = new WebGrid(source: Model);
    var userId=AppContants.LoggedInUser.Id;
}

<h2>Listings Available</h2>
<br/>
<br/>
<h5 style=" float: none; text-align: right; padding-right: 200px;">@Html.ActionLink("Add Property", "AddListing", "Listing", new { UserId=userId }, null)</h5>
</br>
<div>
    @using (Html.BeginForm(FormMethod.Post))
    {
        @grid.GetHtml(tableStyle: "listing-border", headerStyle: "gridhead", footerStyle: "paging", rowStyle: "td-dark", alternatingRowStyle: "td-light",
    columns:
        grid.Columns(
                 grid.Column("PropertyName", "Property Name", style: "colName"),
                 grid.Column("PropertyType", "Property Type", style: "colName"),
                 grid.Column("Locality", "Locality", style: "colName"),
                 grid.Column("AvailabilityType", "Availability Type", style: "colName"),
                 //grid.Column("PhotoLinks", "Photo Links", style: "colName"),
                 //grid.Column("SellerName", "Seller Name", style: "colName"),
                 grid.Column("EstimatedCost", "Estimated Cost", style: "colName"),
                 grid.Column(format: @<text>@Html.ActionLink("Venture", "List", "Venture", new { listingId = item.Id }, null)</text>, header: ""),
                 grid.Column(format: @<text>@Html.ActionLink("Details", "Details", "Listing", new { listingId = item.Id }, null)</text>, header: "")
            //grid.Column(format: @<text>@Html.ActionLink("Pull Contacts", "PullContacts", new { id = item.Id })</text>, header: "")
            @*
                grid.Column(format:@<text>@Html.ActionLink("Edit", "EditItem", new { id = item.Id })</text>, header: "")
            *@
), mode: WebGridPagerModes.Numeric
                      )
    }

</div>

@*
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contacts)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contacts)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>
*@




@*
@model dynamic

@{
    ViewBag.Title = "title";
}

<h2>title</h2>
*@
